#include "ThePOAFactoryMsg.h"
#include <stdlib.h>

namespace TIDNotif { 


  const char* ThePOAFactoryMsg::CREATE_GLOBAL_POA[] =
   { "-> ThePOAFactory.globalPOA(): ", NULL };

  const char* ThePOAFactoryMsg::CREATE_LOCAL_POA[] =
   { "-> ThePOAFactory.localPOA(): ", NULL };

  const char* ThePOAFactoryMsg::CREATE_EXCLUSIVE_POA[] =
   { "-> ThePOAFactory.exclusivePOA(): ", NULL };

  const char* ThePOAFactoryMsg::CONFIG_GLOBAL_POA[] =
   { "  config: ", NULL, ", ", NULL, ", ", NULL };

  const char* ThePOAFactoryMsg::CONFIG_LOCAL_POA[] =
   { "  config: ", NULL, ", ", NULL, ", ", NULL };

  const char* ThePOAFactoryMsg::CONFIG_EXCLUSIVE_POA[] =
   { "  config: ", NULL, ", ", NULL, ", ", NULL };

  const char* ThePOAFactoryMsg::ACTIVATE_GLOBAL_POA = 
   "  ¡activate!";

  const char* ThePOAFactoryMsg::ACTIVATE_LOCAL_POA = 
   "  ¡activate!";

  const char* ThePOAFactoryMsg::ACTIVATE_EXCLUSIVE_POA = 
   "  ¡activate!";

  const char* ThePOAFactoryMsg::DESTROY[] = 
   { "-> POAFactory.destroy: ", NULL };

  const char* ThePOAFactoryMsg::ERROR_POA[] =
   { " ERROR POAFactory: Invalid poaType = ", NULL };

  const char* ThePOAFactoryMsg::EXCEPTION_POA =
   " POAFactory: create child POA Exception.";

  const char* ThePOAFactoryMsg::POA_EXIST =
   " POAFactory: ERROR, child POA already exist.";


  // NUEVO
  const char* ThePOAFactoryMsg::NEW_POA[] = 
   { "* NEW POA: ", NULL };

  const char* ThePOAFactoryMsg::POA_INFO_1[] = 
   { "  [", NULL, "]" };

  const char* ThePOAFactoryMsg::POA_INFO_2[] = 
   { "  POA Manager = ", NULL };

  const char* ThePOAFactoryMsg::POA_INFO_3[] = 
   { "  Parent POA = ", NULL };

  const char* ThePOAFactoryMsg::POA_INFO_4[] =
   { "  Num. Threads = [", NULL, ",", NULL, "] -  Max. Queue Size = ", NULL };
		

}; //namespace TIDNotif
