<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.1//EN">

<article>
 
  <title>INFORME DE ACTIVIDAD</title>

  <!--  ************************* -->
  <sect1 id="planificacion">
    <title>Planificación</title>

    <para>Encuadrado dentro de la participación en las distintas
    implementaciones del ORB de Telefónica I+D, se lleva a cabo el
    desarrollo del Servicio de Notificación para TIDorbC, como un
    porting para la implementación en C++, sobre la base del código
    del servicio para TIDorbJ.</para>

    <para>A continuación se muestra una descripción de la planificación seguida para llevar a cabo el proyecto.</para>

    <sect2>
      <title>Planificación</title>
      <orderedlist>
	<listitem>
	  <para>Preparación del proyecto</para>
	  <para>15/11/05 - 24/11/05 URJC</para>
	</listitem>

	<listitem>
	  <para>Desarrollo de servicio básico</para>
	  <para>25/11/05 - 23/12/05 TID</para>
	</listitem>

	<listitem>
	  <para>Desarrollo de funcionalidades de filtrado</para>
	  <para>25/11/05 - 9/01/06 URJC</para>
	</listitem>

	<listitem>
	  <para>Desarrollo del gestor de políticas de servicio</para>
	  <para>9/01/06 - 20/01/06 URJC</para>
	</listitem>

	<listitem>
	  <para>Ampliación de políticas de calidad de servicio en el ORB</para>
	  <para>9/01/06 - 20/01/06 TID</para>
	</listitem>

	<listitem>
	  <para>Propiedades de calidad de servicio</para>
	  <para>20/01/06 - 15/02/06 TID</para>
	</listitem>

	<listitem>
	  <para>Funcionalidades de persistencia</para>
	  <para>20/01/06 - 10/03/06 TID/URJC</para>
	</listitem>

	<listitem>
	  <para>Pruebas</para>
	  <para>15/02/06 - 30/03/06 TID/URJC</para>
	</listitem>
      </orderedlist>

      <para><command>Nota:</command> Debido a otra serie de tareas
	      surgidas que requerían mayor urgencia, esta planificación ha sufrido
	      un retraso de un mes, fijando la fecha final de entrega
	      del producto en el día 25/04/06.</para>
      <para></para>
      <para></para>
      <para></para>
    </sect2>

    <sect2>
      <title>Hitos realizados</title>
      <itemizedlist>
	<listitem>
	  <para>Preparación del proyecto:</para>
	  <para>Estudio del código en Java del Servicio de
	  Notificación para TIDNotifJ.</para>
	  <para>Compilación de IDLs de los estándares de Eventos y Notificación.</para>
	  <para>Limpieza de las IDLs de las interfaces internas del
	  servicio, quitando IDLs dependientes del Draft de
	  Notificación antiguo y del servicio de Distribución.</para>
	  <para>Creación de estructura de directorios y base de
	  desarrollo y compilación.</para>
	  <para>Creación de base de desarrollo en CVS.</para>
	  <para></para>
	  <para></para>
	</listitem>

	<listitem>
	  <para>Módulo de filtrado:</para>
	  <para>La especificación del Servicio de Notificación describe
	  un servicio que amplía las funcionalidades del Servicio de
	  Eventos, añadiendo algunas nuevas capacidades, como pueden ser: </para>
	  <itemizedlist>
	    <listitem>
	      <para>La posibilidad de transmitir eventos en la forma
	      en que se defina la estructura de datos, en adición a
	      los <parameter>eventos tipados</parameter> y
	      <parameter>eventos tipo Any</parameter> soportados por
	      el Servicio de Eventos.</para>	     
	    </listitem>

	    <listitem>
	      <para>La posibilidad de definir propiedades de calidad
	      de servicio para cada canal, proxy o evento.</para>
	    </listitem>

	    <listitem>
	      <para>La posibilidad de los clientes de especificar
	      exáctamente los eventos en los cuales están interesados
	      en recibir.</para>
	    </listitem>
	  </itemizedlist>

	  <para>En este último punto es donde entra el módulo de
	  filtrado. Estas funcionalidades son soportadas en forma de
	  objetos filtro, cada uno de ellos encapsula un conjunto de
	  restricciones especificadas en una gramática de filtrado
	  particular.</para>

	  <para>Un objeto filtro es una instancia de las clases
	  definidas en la interfaz <keycap>CosNotifyFilter</keycap>, que contiene un conjunto de
	  restricciones, a través de las cuales se pasa el evento para
	  saber si es aceptado o no.</para>

	  <para>Cada interfaz <filename>Admin</filename> y
	  <filename>Proxy</filename> hereda de la interfaz
	  <filename>FilterAdmin</filename>, que soporta las
	  operaciones que permiten el mantenimiento de los objetos
	  filtro. De esta manera cada objeto
	  <filename>Admin</filename> y <filename>Proxy</filename>
	  pueden tener asociado uno o más objetos filtro.</para>

	  <para>Este módulo define las interfaces soportadas por los objetos filtro utilizados
	  en el Servicio de Notificación. En este módulo se definen
	  dos tipos diferentes de filtros. El primer tipo, soportado
	  por la interfaz <keycap>Filter</keycap>, encapsula las
	  restricciones utilizadas por un objeto proxy asociado a un
	  canal de notificación para tomar las decisiones acerca de
	  cuales de los eventos acepta y cuales rechaza. El segundo
	  tipo de filtro, soportado por la interfaz
	  <keycap>MappingFilter</keycap> encapsula las restricciones
	  junto con valores asociados, con las que se determine si un objeto puede alterar la forma de tratar
	  cada acontecimiento según alguna característica particular
	  del evento. Este módulo también define la interfaz
	  <keycap>FilterFactory</keycap> que soporta las operaciones
	  requeridas para crear cada tipo de filtro.</para>

	  <para>Las interfaces <keycap>Filter</keycap> y
	  <keycap>MappingFilter</keycap> contienen el
	  atributo <parameter>constraint_grammar</parameter> que
	  identifica la gramática particular en la cual se definen
	  las expresiones de las restricciones que se definieron para
	  el objeto filtro. El valor de este atributo se fija en la
	  creación de un objeto filtro a través de la operación
	  <parameter>create_filter</parameter> de la interfaz
	  <keycap>FilterFactory</keycap>. El valor que se da a este
	  atributo es el definido como valor por defecto por la
	  especificación del estándar de CORBA con la denominación de
	  <parameter>EXTENDED_TCL</parameter>.</para>
	  <para></para>
	  <para></para>
	</listitem>

	<listitem>
	  <para>Gestor de políticas de servicio:</para>
	  <para>Base para la gestión de políticas de servicio en la
	  transmisión de eventos; define operaciones que permitan a
	  los clientes fijar u obtener los valores para las políticas
	  de calidad de servicio. Se deja a cargo de TID la ampliación
	  de este módulo.</para>
	  <para></para>
	  <para></para>
	</listitem>

	<listitem>
	  <para>Módulo de persistencia:</para>
	  <para>Este módulo es el encargado del almacenamiento
	  persistente tanto de los objetos que intervienen en el Servicio de
	  Notificación, como de los filtros definidos en el módulo de
	  filtrado. En este momento, sólo está implementada la parte
	  de persistencia en fichero, dejando el módulo de
	  persistencia en base de datos para futuras
	  ampliaciones.</para>
	  <para></para>
	  <para></para>
	</listitem>

	<listitem>
	  <para>Documentación:</para>
	  <para>Se ha generado documentación automática en formato
	  <filename>html</filename> y <filename>man</filename>, utilizando la
	  herramienta <keycap>doxygen</keycap>.</para>
	  <para>Para ello existe un fichero de configuración de la
	  herramienta ubicado en source/doc, que automatiza la
	  generación de documentación durante la compilación del proyecto.</para>
	  <para>Dicha documentación se ubica en source/doc.</para>
	  <para></para>
	  <para></para>
	</listitem>

      </itemizedlist>
    </sect2>

  </sect1>

<!-- *************************** -->
  <sect1 id="codigo">
    <title>Implementación</title>

    <sect2>
      <title>Módulo de filtrado</title>
      
      <itemizedlist>
	<listitem>
	  <para><command>Listado de ficheros:</command></para>

	  <simplelist columns="4" type="horiz">
	    <member>|-- /source-></member><member></member><member></member><member></member>
	    <member></member><member><constant>FilterImpl</constant></member><member></member><member></member>
	    <member></member><member><constant>MappingFilterImpl</constant></member><member></member><member></member>
	    <member></member><member><constant>FilterFactoryImpl</constant></member><member></member><member></member>
	    <member></member><member><constant>FilterAdminImpl</constant></member><member></member><member></member>
	    <member></member><member>|-- /util-></member><member></member><member></member>
	    <member></member><member></member><member><constant>StringIDSeq</constant></member><member></member>
	    <member></member><member></member><member><constant>SynSortedMap</constant></member><member></member>
	    <member></member><member></member><member>|-- /parser-></member><member></member>
	    <member></member><member></member><member></member><member><constant>ArrayPath</constant></member>
	    <member></member><member></member><member></member><member><constant>EnumValue</constant></member>
	    <member></member><member></member><member></member><member><constant>StructFieldNamePath</constant></member>
	    <member></member><member></member><member></member><member><constant>TypeValuePair</constant></member>
	    <member></member><member></member><member></member><member><constant>VoidPath</constant></member>
	    <member></member><member></member><member></member><member><constant>BinaryExprNode</constant></member>
	    <member></member><member></member><member></member><member><constant>EvaluableNode</constant></member>
	    <member></member><member></member><member></member><member><constant>SequencePath</constant></member>
	    <member></member><member></member><member></member><member><constant>StructFieldPosPath</constant></member>
	    <member></member><member></member><member></member><member><constant>UnaryExprNode</constant></member>
	    <member></member><member></member><member></member><member><constant>BooleanValueNode</constant></member>
	    <member></member><member></member><member></member><member><constant>IdentifierValueNode</constant></member>
	    <member></member><member></member><member></member><member><constant>SimpleNode</constant></member>
	    <member></member><member></member><member></member><member><constant>TIDConstraint</constant></member>
	    <member></member><member></member><member></member><member><constant>UnionDefaultSwitchPath</constant></member>
	    <member></member><member></member><member></member><member><constant>Debugger</constant></member>
	    <member></member><member></member><member></member><member><constant>InmediateValueNode</constant></member>
	    <member></member><member></member><member></member><member><constant>StringArrayValueNode</constant></member>
	    <member></member><member></member><member></member><member><constant>UnionIntSwitchPath</constant></member>
	    <member></member><member></member><member></member><member><constant>DoubleValueNode</constant></member>
	    <member></member><member></member><member></member><member><constant>LongValueNode</constant></member>
	    <member></member><member></member><member></member><member><constant>StringValueNode</constant></member>
	    <member></member><member></member><member></member><member><constant>TIDParser</constant></member>
	    <member></member><member></member><member></member><member><constant>UnionStringSwitchPath</constant></member>
	    <member></member><member></member><member></member><member><constant>parser.yy</constant></member>
	    <member></member><member></member><member></member><member><constant>scanner.ll</constant></member>
	    <member></member><member></member><member></member><member></member>
	    <member></member><member></member><member></member><member></member>
	    <member></member><member></member><member></member><member></member>
	  </simplelist>
	</listitem>

	<listitem>
	  <para><command>Diagrama de clases del módulo de filtrado</command></para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="diagrama_clases_filtros.png" format="png" scale="45">
	    </imageobject>
	  </mediaobject>
	</listitem>
      </itemizedlist>
    </sect2>



    <sect2>
      <title>Módulo de persistencia</title>

      <itemizedlist>
	<listitem>
	  <para><command>Listado de ficheros:</command></para>

	  <simplelist columns="3" type="horiz">
	    <member>|-- /source-></member><member></member><member></member>
	    <member></member><member><constant>PersistenceManager</constant></member><member></member>
	    <member></member><member><constant>PersistenceDB</constant></member><member></member>
	    <member></member><member><constant>CommonData</constant></member><member></member>
	    <member></member><member><constant>FilterData</constant></member><member></member>
	    <member></member><member><constant>MappingFilterData</constant></member><member></member>
	    <member></member><member>|-- /file-></member><member></member>
	    <member></member><member></member><member><constant>FileUID</constant></member>
	    <member></member><member></member><member><constant>FILEPersistenceDB</constant></member>
	    <member></member><member></member><member><constant>IOException</constant></member>
	    <member></member><member></member><member><constant>NotificationChannelData</constant></member>
	    <member></member><member></member><member><constant>ConsumerAdminData</constant></member>
	    <member></member><member></member><member><constant>SupplierAdminData</constant></member>
	    <member></member><member></member><member><constant>ProxyPushConsumerData</constant></member>
	    <member></member><member></member><member><constant>ProxyPushSupplierData</constant></member>
	    <member></member><member></member><member><constant>ProxyPullConsumerData</constant></member>
	    <member></member><member></member><member><constant>ProxyPullSupplierData</constant></member>
	    <member></member><member></member><member></member>
	    <member></member><member></member><member></member>
	  </simplelist>
	</listitem>

	<listitem>
	  <para><command>Configuración básica del servicio para ofrecer persistencia</command></para>
	  <para>La properties básicas para arrancar el servicio de notificación son:</para>
	  <para><parameter>TIDNotif.data.path</parameter>:
	  Indica la ruta donde se van a almacenar los ficheros con la información de los  canales arrancados.</para>
	  <para><parameter>TIDNotif.data.root</parameter>:
	  Indica el raíz a partir del cual se va a generar la estructura de directorios para la persistencia del canal.</para>
	  <para><parameter>TIDNotif.persistence.db</parameter>: Indica
	  el modo de persistencia que se desea (none, file, db), donde
	  none
	  significa que no se quiere persistencia, file significa que se desea persistencia mediante ficheros y
	  db
	  significa que se desea persistencia a partir de bases de datos (esta ultima opción no
	  implementada y puede conllevar un rediseño de la persistencia en el código).</para>
	  <para><parameter>TIDNotif.orb.port 2002</parameter>: Esta
	  property, aunque indica el puerto donde se va a arrancar
	  el servicio de notificación, influye en la estructura de directorios que se genera para la persistencia.</para>
	  
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="diagrama_clases_persistencia.png" format="png" scale="65">
	    </imageobject>
	  </mediaobject>

	  <para></para>
	  <para></para>
	  <para></para>
	</listitem>

	<listitem>
	  <para>Diagrama del comportamiento del módulo de persistencia
	  en el rearranque del Servicio posterior a una caída:</para>
	  <para></para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="comportamiento_persistencia.png" format="png" scale="35">
	    </imageobject>
	  </mediaobject>
	</listitem>
      </itemizedlist>
    </sect2>


    <sect2>
      <title>Gestor de políticas de calidad de servicio</title>

      <itemizedlist>
	<listitem>
	  <para><command>Listado de ficheros:</command></para>
	  
	  <simplelist columns="3" type="horiz">
	    <member>|-- /source-></member><member></member><member></member>
	    <member></member><member>|-- /util-></member><member></member>
	    <member></member><member></member><member><constant>TIDConfig</constant></member>
	    <member></member><member></member><member><constant>TIDNotifConfig</constant></member>
	    <member></member><member></member><member><constant>TIDNotifUtil</constant></member>
	  </simplelist>
	  
	  <para><filename>Properties:</filename></para>
	  <simplelist columns="3" type="horiz">
	    <member>|-- /source-></member><member></member><member></member>
	    <member></member><member>|-- /qos-></member><member></member>
	    <member></member><member></member><member><constant>EventReliabilityProperty</constant></member>
	    <member></member><member></member><member><constant>QosProperty</constant></member>
	    <member></member><member></member><member><constant>QueueOrderProperty</constant></member>
	    <member></member><member></member><member><constant>StopTimeSupportedProperty</constant></member>
	    <member></member><member></member><member></member>
	    <member></member><member></member><member></member>
	    <member></member><member></member><member></member>
	  </simplelist>
	</listitem>

	<listitem>
	  <para><command>Diagrama de clases del módulo del gestor de políticas</command></para>
	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="diagrama_clases_gestor.png" format="png" scale="55">
	    </imageobject>
	  </mediaobject>
	</listitem>
      </itemizedlist>
    </sect2>

    <sect2>
      <title>Diagrama de comportamiento del Servicio</title>
      
      <mediaobject>
	<imageobject>
	  <imagedata fileref="diagrama.png" format="png" scale="28">
	</imageobject>
      </mediaobject>
    </sect2>

  </sect1> 


<!-- ***************************** -->
  <sect1 id="pruebas">
    <title>Pruebas</title>

    <sect2>
      <title>Pruebas del módulo de filtrado </title>
      <para>Las pruebas del módulo de filtrado se encuentran recogidas
      en el fichero test_filter, ubicado en el directorio test/filter, generando una batería de pruebas
      automatizada.</para>

      <para> Para estas pruebas se han utilizado distintos
      eventos, encapsulados en estructuras <keycap>Any</keycap> de CORBA. Se han
      utilizado dos formas diferentes de generar dichas estructuras,
      la primera de ellas ha sido la creación de un <keycap>Any</keycap>
      directamente sobre el código de test_filter y posteriormente se
      automatizó la creación de estas estructuras mediante la clase
      Test_Events (ubicada en los ficheros
      <filename>Event.h</filename> y <filename>Event.C</filename>)
      definida en <filename>Event.idl</filename>.</para>

      <para>Estas estructuras <keycap>Any</keycap> son los
      eventos enviados en el Servicio de Notificación que pasarán por
      el módulo de filtrado para ser aceptados o rechazados,
      dependiendo de los filtros que estén almacenados en los objetos
      que van a tomar parte en la transmisión de los eventos.</para>

      <para>Las pruebas que se han realizado son:</para>
      <orderedlist>
	<listitem>
	  <para>Tareas de administración de filtros:</para>
	  <para>Obtención de una factoría de filtros por defecto, a
	  través del método
	  <parameter>default_filter_factory</parameter>; creación de
	  filtros a partir de la factoría creada, con el método
	  <parameter>create_filter</parameter>; definición de
	  restricciones para los filtros; inserción de dichas
	  restricciones en los filtros; inserción de los filtros
	  definidos en <filename>Admins</filename>.</para>
	</listitem>

	<listitem>
	  <para>Paso de eventos a través de los filtros.</para>
	  <para>Comprobación de eventos aceptados o rechazados por la
	  gramática de filtrado.</para>
	</listitem>

	<listitem>
	  <para>Eliminación de filtros.</para>
	  <para>Se comprueba la funcionalidad proporcionada por el
	  método <parameter>remove_filter</parameter>.</para>
	</listitem>

	<listitem>
	  <para>Intento de borrado de filtros eliminados anteriormente.</para>
	</listitem>

	<listitem>
	  <para>Intento de obtención de filtros eliminados anteriormente.</para>
	</listitem>

	<listitem>
	  <para>Operaciones de modificación y eliminación de restricciones directamente
	  sobre filtros.</para>
	  <para>Se insertan restricciones correctamente; al insertar
	  alguna restricción incorrecta, el filtro debe recuperarse y
	  volver al estado anterior.</para>
	</listitem>

	<listitem>
	  <para>Pruebas con gramática incorrecta.</para>
	  <para>Se comprueba el comportamiento del Servicio al definir
	  una gramática no reconocida por el estándar CORBA.</para>
	</listitem>
      </orderedlist>

      <para>Para comprobar que el resultado de todas estas pruebas sea
      satisfactorio, durante cada de ellas se pasan los eventos
      definidos al principio, observando el comportamiento del Servicio.</para>

      <para>Las pruebas realizadas del módulo de filtrado cubren los
      requisitos especificados en el punto 3.2.4 de la especificación
      de requisitos de TIDNotif <parameter>(RF-NF04 filtrado de eventos)</parameter>.</para>
    </sect2>

    <sect2>
      <title>Pruebas del módulo de persistencia:</title>
      <para> Las pruebas del módulo de persistencia se encuentran
      recogidas en el script persistence, ubicado en el directorio
      <filename>source</filename>, realizando una batería de
      pruebas automatizada.</para>

      <para>Esta prueba consta de las siguientes fases:</para>


      <orderedlist>
	<listitem>
	  <para>Creación y registro de todos los objetos que intervienen en
	  un proceso normal de comunicación a través del Servicio de Notificación.</para>
	</listitem>

	<listitem>
	  <para>Guardado de las referencias a los objetos EventChannelFactory, canales que se hayan creado,
	  ConsumerAdmins y SupplierAdmins y proxies creados por los admins.</para>
	</listitem>

	<listitem>
	  <para>Envío de eventos en este punto.</para>
	</listitem>

	<listitem>
	  <para>Se provoca la caída del Servicio, para posteriormente
	  proceder a su rearrancado y recuperación de las referencias guardadas en persistencia.</para>
	</listitem>

	<listitem>
	  <para>Se vuelven a envíar los mismos eventos que en el punto
	  anterior, para comprobar que todas las referencias se han
	  recuperado correctamente y el Servicio se recupera de manera satisfactoria.</para>
	</listitem>
      </orderedlist>

    </sect2>

    <sect2>
      <title>Pruebas del gestor de configuración de políticas de
      servicio </title>
      <para>Las pruebas realizadas se limitan a la creación,
      definición, carga, almacenamiento y actualización de properties,
      así como acceso a un valor almacenado anteriormente.</para>
    </sect2>

  </sect1>


<!-- ******************************** -->
  <sect1 id="requisitos">
    <title>Instalación y requisitos del sistema</title>
    <para>En esta sección se comentan las herramientas necesarias para
    la compilación y ejecución del Servicio de Notificación.</para>

    <para>Para la obtención del Servicio a través de CVS es necesario
    ser usuario registrado en la forja del proyecto morfeo, <ulink
    url="forge.morfeo-project.org">forge.morfeo-project.org</ulink>.</para>
    <para>Descarga del módulo de cvs a través de consola Unix, usando
    el siguiente comando:</para>
    <para><userinput>cvs
    -d:ext:<parameter>nombreUsuario</parameter>@morfeo-project.org:/cvsroot/tidnotifc/
    co tidnotifc</userinput></para>

    <itemizedlist>
      <listitem>
	<para>Herramientas necesarias para la compilación del Servicio:</para>
	<simplelist>
	  <member>-Compilador de C++: gcc versión 3.4.5</member>
	  <member>-bison versión 2.0</member>
	  <member>-flex versión 2.5.31</member>
	  <member>-libtool versión 1.5.6</member>
	  <member>-autoconf versión 2.59</member>
	  <member>-automake versión 1.9.5</member>
	</simplelist>
      </listitem>

      <listitem>
	<para>Proceso de compilación del Servicio:</para>
	<simplelist>
	  <member>-Ejecutar <parameter>bootstrap</parameter></member>
	  <member>-Ejecutar <parameter>configure</parameter></member>
	  <member>-Ejecutar <parameter>make</parameter></member>
	</simplelist>
      </listitem>


      <listitem>
	<para>Arranque básico del Servicio de Notificación:</para>
	<simplelist>
	  <member>-Ejecutar <parameter>./tidnotif</parameter></member>
	</simplelist>
	<para>Los parámetros necesarios para la configuración del
	módulo de persistencia son especificados en el apartado 2.2,
	<parameter>Configuración básica del servicio  para ofrecer persistencia</parameter>.</para>
      </listitem>

      <listitem>
	<para>Ejecución de las pruebas:</para>
	<para>Programa de prueba para filtrado: -Ejecutar
	<parameter>./test_filter</parameter> Este programa de prueba muestra mensajes de diagnóstico si se ha
	producido cualquier error o muestra un <filename>OK</filename>
	en caso de que la prueba haya sido satisfactoria.</para>

	<para>Programa de prueba para persistencia: -Ejecutar
	<parameter>./persistence</parameter></para>
      </listitem>

    </itemizedlist>

  </sect1>


<!-- ******************************* -->
  <sect1 id="esfuerzo">
    <title>Estimación de esfuerzo realizado</title>

    <sect2>
      <title>Tiempo de desarrollo</title>

      <itemizedlist>
	<listitem>
	  <para>Módulo de filtrado:</para>
	  <para>Base del módulo realizado por David Alonso
	  Rodríguez (Noviembre 2005 - Febrero 2006)<!--(esfuerzo 540 horas)-->.</para>
	  <para>Gramática de filtrado realizada por Álvaro Polo
	  Valdenebro (Febrero 2006 - Marzo 2006)<!--(esfuerzo ...horas)-->.</para>
	</listitem>
	
	<listitem>
	  <para>Gestor de políticas de calidad de servicio: realizado
	  por Tomás Aguado Gómez (Enero 2006)<!--(esfuerzo 60 horas)-->.</para>
	</listitem>
	
	<listitem>
	  <para>Módulo de persistencia: realizado por David Alonso
	  Rodríguez (Diciembre 2005 - Abril 2006) <!--(esfuerzo 420
	  horas)-->; realizado por Juan Pedro Bolsico Moreno (Marzo
	  2006 - Abril 2006).</para>
	</listitem>
      </itemizedlist>
    </sect2>


    <sect2>
      <title>Estimación según líneas de código</title>
      <para>A modo de información y para mostrar alguna posible
      desviación respecto a la planificación prevista, hemos realizado
      una estimación de esfuerzo utilizando la herramienta
      <filename>COCOMO básico</filename>, partiendo de las líneas de
      código generadas. Para una estimación con
      mayor detalle se podrían utilizar ampliaciones de la
      herramienta, como <filename>COCOMO intermedio</filename>, en
      este caso sería necesaria una mayor planificación.</para>

      <para>Los resultados obtenidos son los siguientes:</para>

      <simplelist columns="2" type="horiz">
	<member>Total Physical Source Lines of Code (SLOC)</member><member> = 10,490</member>
	<member></member><member></member>
	<member>Development Effort Estimate, Person-Years (Person-Months)</member><member> = 2.36 (28.32)</member>
	<member>(Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))</member><member></member>
	<member></member><member></member>
	<member>Schedule Estimate, Years (Months) </member><member> = 0.74 (8.91)</member>
	<member>(Basic COCOMO model, Months = 2.5 * (person-months**0.38))</member><member></member>
	<member></member><member></member>
	<member>Estimated Average Number of Developers (Effort/Schedule)</member><member> = 3.18</member>
      </simplelist>
    </sect2>

  </sect1>

<!-- ********************** -->
  <sect1>
    <title>Observaciones</title>
    <para>El diseño utilizado como referencia en este proyecto proviene del Servicio de
    Notificación TIDNotifJ, que aún se encuentra en fase de
    desarrollo, debido a esto pueden presentarse deficiencias y
    algunas partes inconsistentes.</para>
    <para>Se pueden realizar las siguientes mejoras o ampliaciones del
    servicio: Persistencia en base de datos, métodos no implementados
    en filtros, optimización del diseño, etc...</para> 

  </sect1>


</article>