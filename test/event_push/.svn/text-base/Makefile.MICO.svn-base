IDL_FILES=Event.idl

IDL_SRC_FILES=Event.h Event.cc
IDL_OBJ_FILES=Event.o 
IDL_GENERATED=$(IDL_SOURCE) $(IDL_SRC_FILES) $(IDL_OBJ_FILES)

IDL_LIBNAME=libIdl.so
IDL_LIB=-lIdl

IDL2CXX=idl
IDL2CXX_FLAGS=--c++-suffix cc --hh-suffix h --any --typecode -I$(MICODIR)/include/coss

OBJECTS=MySupplierImpl.o MyConsumerImpl.o 
BINARIES=supplier server consumer1 consumer2

LIBNAMES=$(IDL_LIBNAME)
LIBS=$(IDL_LIB)


CXX=mico-c++
CXXFLAGS=-g -Wall -D_REENTRANT -D_GNU_SOURCE -D_MICO

CPP=$(CXX) -P
CPPFLAGS=-I. -I$(IDL_INCLUDE) -I$(MICODIR)/include -I$(MICODIR)/include/coss

LD=$(CXX)
LDFLAGS=-g -L. -L$(MICODIR)/lib
LDLIBS=$(LIBS) -lmico$(MICOVERSION) -lmicocoss$(MICOVERSION) -ldl -lm -lpthread -lssl -lcrypto

AR=mico-ar
ARFLAGS=

all: $(IDL_LIBNAME) server supplier consumer1 consumer2

build: clean all

clean:
	rm -rf *.o ior.dat $(BINARIES) $(LIBNAMES) $(IDL_GENERATED)

consumer1: $(LIBNAMES) consumer1.o  MyConsumerImpl.o 
	$(LD) $(LDFLAGS) -o consumer1 consumer1.o MyConsumerImpl.o  $(LDLIBS)	

consumer2: $(LIBNAMES) consumer2.o  MyConsumerImpl.o 
	$(LD) $(LDFLAGS) -o consumer2 consumer2.o  MyConsumerImpl.o $(LDLIBS)	

server: server.o $(OBJECTS)
	$(LD) $(LDFLAGS) -o server server.o $(OBJECTS) $(LDLIBS)

supplier: supplier.o $(OBJECTS)
	$(LD) $(LDFLAGS) -o supplier supplier.o $(OBJECTS) $(LDLIBS)

$(IDL_SRC_FILES):
	$(IDL2CXX) $(IDL2CXX_FLAGS) $(IDL_FILES)

$(IDL_LIBNAME): $(IDL_SRC_FILES) 
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -o Event.o -c Event.cc
	$(AR) $(ARFLAGS) $@ $(IDL_OBJ_FILES) $(LD_LIBS)

.cpp.o .cc.o .C.o:
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -o $@ -c $<
